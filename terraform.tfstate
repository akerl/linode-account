{
    "version": 3,
    "terraform_version": "0.11.8",
    "serial": 27,
    "lineage": "07528e21-04e2-6968-cf48-b8fbadb735a2",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {},
            "resources": {
                "data.external.ssh_key": {
                    "type": "external",
                    "depends_on": [],
                    "primary": {
                        "id": "-",
                        "attributes": {
                            "id": "-",
                            "program.#": "1",
                            "program.0": "./assets/get_ssh_key.sh",
                            "result.%": "1",
                            "result.public_key": "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPkiSoS5U0Zef2hRKzZ8jk3KIMT5pAiNTMPXf1HzbGZh"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.external"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "green-algo"
            ],
            "outputs": {
                "ip_address": {
                    "sensitive": false,
                    "type": "string",
                    "value": "172.104.32.130"
                }
            },
            "resources": {
                "data.template_file.config": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "15b9dacf201102f461f026575ad08048f4e189a4ed2fc38a67c5daa72080892f",
                        "attributes": {
                            "id": "15b9dacf201102f461f026575ad08048f4e189a4ed2fc38a67c5daa72080892f",
                            "rendered": "---\nusers: [\"alfa\",\"beta\"]\n\nkeys_clean_all: False\n\nvpn_network: 10.19.48.0/24\nvpn_network_ipv6: 'fd9d:bc11:4020::/48'\n\nwireguard_enabled: true\nwireguard_port: 51820\n\nstrongswan_log_level: 2\n\ndns_encryption: true\ndnscrypt_servers:\n  ipv4:\n    - cloudflare\n  ipv6:\n    - cloudflare-ipv6\nlocal_service_ip: 172.16.0.1\n\nunattended_reboot:\n  enabled: false\n  time: 06:00\n\npkcs12_PayloadCertificateUUID: \"{{ 900000 | random | to_uuid | upper }}\"\nVPN_PayloadIdentifier: \"{{ 800000 | random | to_uuid | upper }}\"\nCA_PayloadIdentifier: \"{{ 700000 | random | to_uuid | upper }}\"\n\nBetweenClients_DROP: true\n\ncongrats:\n  common: \"# Algo setup complete\"\n  p12_pass: \"# User cert passphrase written to local disk\"\n\nSSH_keys:\n  comment: algo@ssh\n  private: configs/algo.pem\n  public: configs/algo.pem.pub\n\ncloud_providers:\n  local:\n\nfail_hint:\n  - Sorry, but something went wrong!\n\nbooleans_map:\n  Y: true\n  y: true\n",
                            "template": "---\nusers: ${userlist}\n\nkeys_clean_all: False\n\nvpn_network: 10.19.48.0/24\nvpn_network_ipv6: 'fd9d:bc11:4020::/48'\n\nwireguard_enabled: true\nwireguard_port: 51820\n\nstrongswan_log_level: 2\n\ndns_encryption: true\ndnscrypt_servers:\n  ipv4:\n    - cloudflare\n  ipv6:\n    - cloudflare-ipv6\nlocal_service_ip: 172.16.0.1\n\nunattended_reboot:\n  enabled: false\n  time: 06:00\n\npkcs12_PayloadCertificateUUID: \"{{ 900000 | random | to_uuid | upper }}\"\nVPN_PayloadIdentifier: \"{{ 800000 | random | to_uuid | upper }}\"\nCA_PayloadIdentifier: \"{{ 700000 | random | to_uuid | upper }}\"\n\nBetweenClients_DROP: true\n\ncongrats:\n  common: \"# Algo setup complete\"\n  p12_pass: \"# User cert passphrase written to local disk\"\n\nSSH_keys:\n  comment: algo@ssh\n  private: configs/algo.pem\n  public: configs/algo.pem.pub\n\ncloud_providers:\n  local:\n\nfail_hint:\n  - Sorry, but something went wrong!\n\nbooleans_map:\n  Y: true\n  y: true\n",
                            "vars.%": "1",
                            "vars.userlist": "[\"alfa\",\"beta\"]"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "null_resource.configuration": {
                    "type": "null_resource",
                    "depends_on": [
                        "data.template_file.config",
                        "module.vm"
                    ],
                    "primary": {
                        "id": "2845584844337853282",
                        "attributes": {
                            "id": "2845584844337853282"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.null"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "image"
            ],
            "outputs": {},
            "resources": {
                "random_id.vm_suffix": {
                    "type": "random_id",
                    "depends_on": [],
                    "primary": {
                        "id": "HERyq4VzUjs",
                        "attributes": {
                            "b64": "HERyq4VzUjs",
                            "b64_std": "HERyq4VzUjs=",
                            "b64_url": "HERyq4VzUjs",
                            "byte_length": "8",
                            "dec": "2036879012482208315",
                            "hex": "1c4472ab8573523b",
                            "id": "HERyq4VzUjs"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.random"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "red-algo"
            ],
            "outputs": {},
            "resources": {
                "data.template_file.config": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "15b9dacf201102f461f026575ad08048f4e189a4ed2fc38a67c5daa72080892f",
                        "attributes": {
                            "id": "15b9dacf201102f461f026575ad08048f4e189a4ed2fc38a67c5daa72080892f",
                            "rendered": "---\nusers: [\"alfa\",\"beta\"]\n\nkeys_clean_all: False\n\nvpn_network: 10.19.48.0/24\nvpn_network_ipv6: 'fd9d:bc11:4020::/48'\n\nwireguard_enabled: true\nwireguard_port: 51820\n\nstrongswan_log_level: 2\n\ndns_encryption: true\ndnscrypt_servers:\n  ipv4:\n    - cloudflare\n  ipv6:\n    - cloudflare-ipv6\nlocal_service_ip: 172.16.0.1\n\nunattended_reboot:\n  enabled: false\n  time: 06:00\n\npkcs12_PayloadCertificateUUID: \"{{ 900000 | random | to_uuid | upper }}\"\nVPN_PayloadIdentifier: \"{{ 800000 | random | to_uuid | upper }}\"\nCA_PayloadIdentifier: \"{{ 700000 | random | to_uuid | upper }}\"\n\nBetweenClients_DROP: true\n\ncongrats:\n  common: \"# Algo setup complete\"\n  p12_pass: \"# User cert passphrase written to local disk\"\n\nSSH_keys:\n  comment: algo@ssh\n  private: configs/algo.pem\n  public: configs/algo.pem.pub\n\ncloud_providers:\n  local:\n\nfail_hint:\n  - Sorry, but something went wrong!\n\nbooleans_map:\n  Y: true\n  y: true\n",
                            "template": "---\nusers: ${userlist}\n\nkeys_clean_all: False\n\nvpn_network: 10.19.48.0/24\nvpn_network_ipv6: 'fd9d:bc11:4020::/48'\n\nwireguard_enabled: true\nwireguard_port: 51820\n\nstrongswan_log_level: 2\n\ndns_encryption: true\ndnscrypt_servers:\n  ipv4:\n    - cloudflare\n  ipv6:\n    - cloudflare-ipv6\nlocal_service_ip: 172.16.0.1\n\nunattended_reboot:\n  enabled: false\n  time: 06:00\n\npkcs12_PayloadCertificateUUID: \"{{ 900000 | random | to_uuid | upper }}\"\nVPN_PayloadIdentifier: \"{{ 800000 | random | to_uuid | upper }}\"\nCA_PayloadIdentifier: \"{{ 700000 | random | to_uuid | upper }}\"\n\nBetweenClients_DROP: true\n\ncongrats:\n  common: \"# Algo setup complete\"\n  p12_pass: \"# User cert passphrase written to local disk\"\n\nSSH_keys:\n  comment: algo@ssh\n  private: configs/algo.pem\n  public: configs/algo.pem.pub\n\ncloud_providers:\n  local:\n\nfail_hint:\n  - Sorry, but something went wrong!\n\nbooleans_map:\n  Y: true\n  y: true\n",
                            "vars.%": "1",
                            "vars.userlist": "[\"alfa\",\"beta\"]"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "green-algo",
                "vm"
            ],
            "outputs": {
                "disk_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "23105164"
                },
                "ip_address": {
                    "sensitive": false,
                    "type": "string",
                    "value": "172.104.32.130"
                },
                "linode_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "10864863"
                }
            },
            "resources": {
                "data.template_file.setup": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "8ce3fe6cbf2441b038de4792d8245cf23fd7a7b8ad68ec25de5a3e89b5862643",
                        "attributes": {
                            "id": "8ce3fe6cbf2441b038de4792d8245cf23fd7a7b8ad68ec25de5a3e89b5862643",
                            "rendered": "#!/usr/bin/env bash\n\nset -euo pipefail\n\nexport DEBIAN_FRONTEND=noninteractive\n\napt update\napt upgrade -y\napt install -y ansible python-pip build-essential python-dev python-virtualenv\n\nALGO_DIR=/opt/algo\nif [[ ! -e \"$ALGO_DIR\" ]] ; then\n    git clone \"https://github.com/akerl/algo\" \"$ALGO_DIR\"\nfi\ncd \"$ALGO_DIR\"\n\nif [[ \"$(git remote get-url origin)\" != \"https://github.com/akerl/algo\" ]] ; then\n    echo \"Repo in image is not the expected repo\"\n    exit 1\nfi\n\ngit pull\n[[ ! -e env ]] \u0026\u0026 python -m virtualenv env\nexport PS1=\"\"\nsource env/bin/activate\npip install -r requirements.txt\n",
                            "template": "#!/usr/bin/env bash\n\nset -euo pipefail\n\nexport DEBIAN_FRONTEND=noninteractive\n\napt update\napt upgrade -y\napt install -y ansible python-pip build-essential python-dev python-virtualenv\n\nALGO_DIR=/opt/algo\nif [[ ! -e \"$ALGO_DIR\" ]] ; then\n    git clone \"${algo_repo}\" \"$ALGO_DIR\"\nfi\ncd \"$ALGO_DIR\"\n\nif [[ \"$(git remote get-url origin)\" != \"${algo_repo}\" ]] ; then\n    echo \"Repo in image is not the expected repo\"\n    exit 1\nfi\n\ngit pull\n[[ ! -e env ]] \u0026\u0026 python -m virtualenv env\nexport PS1=\"\"\nsource env/bin/activate\npip install -r requirements.txt\n",
                            "vars.%": "1",
                            "vars.algo_repo": "https://github.com/akerl/algo"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "linode_instance.algo": {
                    "type": "linode_instance",
                    "depends_on": [
                        "data.template_file.setup"
                    ],
                    "primary": {
                        "id": "10864863",
                        "attributes": {
                            "alerts.#": "1",
                            "alerts.0.cpu": "90",
                            "alerts.0.io": "10000",
                            "alerts.0.network_in": "10",
                            "alerts.0.network_out": "10",
                            "alerts.0.transfer_quota": "80",
                            "backups.#": "1",
                            "boot_config_label": "default",
                            "config.#": "1",
                            "config.0.comments": "",
                            "config.0.devices.#": "1",
                            "config.0.devices.0.sda.#": "1",
                            "config.0.devices.0.sda.0.disk_id": "23105164",
                            "config.0.devices.0.sda.0.disk_label": "root",
                            "config.0.devices.0.sda.0.volume_id": "0",
                            "config.0.devices.0.sdb.#": "0",
                            "config.0.devices.0.sdc.#": "0",
                            "config.0.devices.0.sdd.#": "0",
                            "config.0.devices.0.sde.#": "0",
                            "config.0.devices.0.sdf.#": "0",
                            "config.0.devices.0.sdg.#": "0",
                            "config.0.devices.0.sdh.#": "0",
                            "config.0.helpers.#": "1",
                            "config.0.helpers.0.devtmpfs_automount": "true",
                            "config.0.helpers.0.distro": "true",
                            "config.0.helpers.0.modules_dep": "true",
                            "config.0.helpers.0.network": "true",
                            "config.0.helpers.0.updatedb_disabled": "true",
                            "config.0.kernel": "linode/grub2",
                            "config.0.label": "default",
                            "config.0.memory_limit": "0",
                            "config.0.root_device": "/dev/root",
                            "config.0.run_level": "default",
                            "config.0.virt_mode": "paravirt",
                            "disk.#": "1",
                            "disk.0.authorized_keys.#": "0",
                            "disk.0.filesystem": "ext4",
                            "disk.0.id": "23105164",
                            "disk.0.image": "",
                            "disk.0.label": "root",
                            "disk.0.read_only": "false",
                            "disk.0.root_pass": "",
                            "disk.0.size": "10240",
                            "disk.0.stackscript_data.%": "0",
                            "disk.0.stackscript_id": "0",
                            "group": "",
                            "id": "10864863",
                            "ip_address": "172.104.32.130",
                            "ipv4.#": "1",
                            "ipv4.1253614496": "172.104.32.130",
                            "ipv6": "2400:8901::f03c:91ff:fef0:f7ef/64",
                            "label": "green-algo",
                            "private_ip": "false",
                            "region": "ap-south",
                            "specs.#": "1",
                            "specs.0.disk": "81920",
                            "specs.0.memory": "4096",
                            "specs.0.transfer": "4000",
                            "specs.0.vcpus": "2",
                            "status": "running",
                            "swap_size": "0",
                            "type": "g6-standard-2",
                            "watchdog_enabled": "true"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.linode"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "image",
                "vm"
            ],
            "outputs": {
                "disk_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "23136891"
                },
                "ip_address": {
                    "sensitive": false,
                    "type": "string",
                    "value": "172.104.217.35"
                },
                "linode_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "10881303"
                }
            },
            "resources": {
                "data.template_file.setup": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "8ce3fe6cbf2441b038de4792d8245cf23fd7a7b8ad68ec25de5a3e89b5862643",
                        "attributes": {
                            "id": "8ce3fe6cbf2441b038de4792d8245cf23fd7a7b8ad68ec25de5a3e89b5862643",
                            "rendered": "#!/usr/bin/env bash\n\nset -euo pipefail\n\nexport DEBIAN_FRONTEND=noninteractive\n\napt update\napt upgrade -y\napt install -y ansible python-pip build-essential python-dev python-virtualenv\n\nALGO_DIR=/opt/algo\nif [[ ! -e \"$ALGO_DIR\" ]] ; then\n    git clone \"https://github.com/akerl/algo\" \"$ALGO_DIR\"\nfi\ncd \"$ALGO_DIR\"\n\nif [[ \"$(git remote get-url origin)\" != \"https://github.com/akerl/algo\" ]] ; then\n    echo \"Repo in image is not the expected repo\"\n    exit 1\nfi\n\ngit pull\n[[ ! -e env ]] \u0026\u0026 python -m virtualenv env\nexport PS1=\"\"\nsource env/bin/activate\npip install -r requirements.txt\n",
                            "template": "#!/usr/bin/env bash\n\nset -euo pipefail\n\nexport DEBIAN_FRONTEND=noninteractive\n\napt update\napt upgrade -y\napt install -y ansible python-pip build-essential python-dev python-virtualenv\n\nALGO_DIR=/opt/algo\nif [[ ! -e \"$ALGO_DIR\" ]] ; then\n    git clone \"${algo_repo}\" \"$ALGO_DIR\"\nfi\ncd \"$ALGO_DIR\"\n\nif [[ \"$(git remote get-url origin)\" != \"${algo_repo}\" ]] ; then\n    echo \"Repo in image is not the expected repo\"\n    exit 1\nfi\n\ngit pull\n[[ ! -e env ]] \u0026\u0026 python -m virtualenv env\nexport PS1=\"\"\nsource env/bin/activate\npip install -r requirements.txt\n",
                            "vars.%": "1",
                            "vars.algo_repo": "https://github.com/akerl/algo"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "linode_instance.algo": {
                    "type": "linode_instance",
                    "depends_on": [
                        "data.template_file.setup"
                    ],
                    "primary": {
                        "id": "10881303",
                        "attributes": {
                            "alerts.#": "1",
                            "alerts.0.cpu": "90",
                            "alerts.0.io": "10000",
                            "alerts.0.network_in": "10",
                            "alerts.0.network_out": "10",
                            "alerts.0.transfer_quota": "80",
                            "backups.#": "1",
                            "boot_config_label": "default",
                            "config.#": "1",
                            "config.0.comments": "",
                            "config.0.devices.#": "1",
                            "config.0.devices.0.sda.#": "1",
                            "config.0.devices.0.sda.0.disk_id": "23136891",
                            "config.0.devices.0.sda.0.disk_label": "root",
                            "config.0.devices.0.sda.0.volume_id": "0",
                            "config.0.devices.0.sdb.#": "0",
                            "config.0.devices.0.sdc.#": "0",
                            "config.0.devices.0.sdd.#": "0",
                            "config.0.devices.0.sde.#": "0",
                            "config.0.devices.0.sdf.#": "0",
                            "config.0.devices.0.sdg.#": "0",
                            "config.0.devices.0.sdh.#": "0",
                            "config.0.helpers.#": "1",
                            "config.0.helpers.0.devtmpfs_automount": "true",
                            "config.0.helpers.0.distro": "true",
                            "config.0.helpers.0.modules_dep": "true",
                            "config.0.helpers.0.network": "true",
                            "config.0.helpers.0.updatedb_disabled": "true",
                            "config.0.kernel": "linode/grub2",
                            "config.0.label": "default",
                            "config.0.memory_limit": "0",
                            "config.0.root_device": "/dev/root",
                            "config.0.run_level": "default",
                            "config.0.virt_mode": "paravirt",
                            "disk.#": "1",
                            "disk.0.authorized_keys.#": "0",
                            "disk.0.filesystem": "ext4",
                            "disk.0.id": "23136891",
                            "disk.0.image": "",
                            "disk.0.label": "root",
                            "disk.0.read_only": "false",
                            "disk.0.root_pass": "",
                            "disk.0.size": "10240",
                            "disk.0.stackscript_data.%": "0",
                            "disk.0.stackscript_id": "0",
                            "group": "",
                            "id": "10881303",
                            "ip_address": "172.104.217.35",
                            "ipv4.#": "1",
                            "ipv4.1923521733": "172.104.217.35",
                            "ipv6": "2600:3c03::f03c:91ff:fe13:26c0/64",
                            "label": "algo-image_1c4472ab8573523b-algo",
                            "private_ip": "false",
                            "region": "us-east",
                            "specs.#": "1",
                            "specs.0.disk": "51200",
                            "specs.0.memory": "2048",
                            "specs.0.transfer": "2000",
                            "specs.0.vcpus": "1",
                            "status": "running",
                            "swap_size": "0",
                            "type": "g6-standard-1",
                            "watchdog_enabled": "true"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.linode"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "red-algo",
                "vm"
            ],
            "outputs": {},
            "resources": {
                "data.template_file.setup": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "8ce3fe6cbf2441b038de4792d8245cf23fd7a7b8ad68ec25de5a3e89b5862643",
                        "attributes": {
                            "id": "8ce3fe6cbf2441b038de4792d8245cf23fd7a7b8ad68ec25de5a3e89b5862643",
                            "rendered": "#!/usr/bin/env bash\n\nset -euo pipefail\n\nexport DEBIAN_FRONTEND=noninteractive\n\napt update\napt upgrade -y\napt install -y ansible python-pip build-essential python-dev python-virtualenv\n\nALGO_DIR=/opt/algo\nif [[ ! -e \"$ALGO_DIR\" ]] ; then\n    git clone \"https://github.com/akerl/algo\" \"$ALGO_DIR\"\nfi\ncd \"$ALGO_DIR\"\n\nif [[ \"$(git remote get-url origin)\" != \"https://github.com/akerl/algo\" ]] ; then\n    echo \"Repo in image is not the expected repo\"\n    exit 1\nfi\n\ngit pull\n[[ ! -e env ]] \u0026\u0026 python -m virtualenv env\nexport PS1=\"\"\nsource env/bin/activate\npip install -r requirements.txt\n",
                            "template": "#!/usr/bin/env bash\n\nset -euo pipefail\n\nexport DEBIAN_FRONTEND=noninteractive\n\napt update\napt upgrade -y\napt install -y ansible python-pip build-essential python-dev python-virtualenv\n\nALGO_DIR=/opt/algo\nif [[ ! -e \"$ALGO_DIR\" ]] ; then\n    git clone \"${algo_repo}\" \"$ALGO_DIR\"\nfi\ncd \"$ALGO_DIR\"\n\nif [[ \"$(git remote get-url origin)\" != \"${algo_repo}\" ]] ; then\n    echo \"Repo in image is not the expected repo\"\n    exit 1\nfi\n\ngit pull\n[[ ! -e env ]] \u0026\u0026 python -m virtualenv env\nexport PS1=\"\"\nsource env/bin/activate\npip install -r requirements.txt\n",
                            "vars.%": "1",
                            "vars.algo_repo": "https://github.com/akerl/algo"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                }
            },
            "depends_on": []
        }
    ]
}
